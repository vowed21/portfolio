{"version":3,"sources":["index.css","App.scss","mixin.scss"],"names":[],"mappings":"AAAA,KAAO,sBAAyB,CAChC,KACE,QAAS,CACT,wKAEY,CACZ,kCAAmC,CACnC,iCACF,CAEA,KACE,yEAEF,CCXA,SAAW,gBCAM,CDAgB,WAAY,CAAG,OAI9C,qBAAsB,CAAE,6BAAiC,CAAE,2BAA4B,CACvF,YAAa,CAAE,kBAAmB,CAClC,YAAa,CAAE,UAAY,CAC3B,sCAAwC,CAJ1C,kBAOI,iBAAkB,CAAE,UAAW,CAPnC,qBAQS,cAAe,CARxB,oBASQ,gBAAiB,CAAG,OAM1B,cAAe,CAAG,KAAM,CAAE,MAAO,CAAE,OAAQ,CAC3C,4BAAiC,CAAE,UAAY,CAFjD,oBAII,YAAa,CAAE,kBAAmB,CAClC,WChBe,CDWnB,kBASI,cAAe,CAAE,eAAmB,CAAG,UAAW,CAClD,aAAc,CAAE,cAAe,CAC/B,sCAAwC,CAX5C,mDAayC,UAAY,CAAE,eAAiB","file":"main.615c59c7.chunk.css","sourcesContent":["html { scroll-behavior: smooth; }\nbody {\n  margin: 0;\n  font-family: \"Nanum Barun Gothic\", -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","@import './mixin.scss';\n\n.wrapper { max-width: $width-lg; margin: auto;}\n\n\n#Intro {\n  background-size: cover; background-position: right bottom; background-repeat: no-repeat;\n  display: flex; align-items: center;\n  height: 100vh; color: white;\n  text-shadow: 2px 2px 4px rgba(0,0,0,0.9);\n\n  #wrap-text { \n    text-align: center; width: 100%;\n    h1 { font-size: 5rem;}\n    p { font-size: 1.2rem;}\n  }\n\n}\n\nheader {\n  position: fixed;  top: 0; left: 0; right: 0;  ;\n  background-color: rgba(0,0,0,0.0); color: white;\n  .wrap-header {\n    display: flex; align-items: center; \n    height: $headerHeight;\n  }\n  \n  .menu-item { \n    font-size: 22px; font-weight: normal;  color: #ddd; \n    margin: 0 20px; cursor: pointer; \n    text-shadow: 1px 1px 4px rgba(0,0,0,0.9);\n  }\n  .menu-item:hover,.menu-item.selected { color: white; font-weight: bold; }\n}\n","\n$width-xl: 1920px;\n$width-lg: 1280px;\n$width-md: 960px;\n$width-tablet: 780px;\n$width-sm: 420px;\n$width-mobile-compact: 320px;\n\n$headerHeight: 60px;\n$headerHeightMobile: 50px;\n\n\n\n$breakpoints: (\n  'xl': (max-width: $width-xl),\n  'lg': (max-width: $width-lg),\n  'md': (max-width: $width-md),\n  'tablet': (max-width: $width-tablet),\n  'sm': (max-width: $width-sm),\n  'mobile-compact': (max-width: $width-mobile-compact)        \n) !default;\n\n\n@mixin respond($breakpoint) {\n    // If the key exists in the map\n    @if map-has-key($breakpoints, $breakpoint) {\n        // Prints a media query based on the value\n        @media #{inspect(map-get($breakpoints, $breakpoint))} {\n            @content;\n        }\n    }\n    // If the key doesn't exist in the map\n    @else {\n        @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n        + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\n    }\n}\n\n\n\n\n\n"]}